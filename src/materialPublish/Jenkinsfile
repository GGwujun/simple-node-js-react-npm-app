pipeline {
    agent any
    environment {
        CI = 'true'
        MATERIAL_BUILD_DIR = '/var/lib/jenkins/material-build'
    }
    stages {
        stage('Pre Git') {
            steps {
                echo "物料仓库信息：${params.MATERIAL_REPOSITORY_NAME},${params.MATERIAL_REPOSITORY_GIT_PATH}"
                echo "物料信息：${params.MATERIAL_NAME},${params.MATERIAL_PATH},${params.MATERIAL_CATEGORY}"
                echo "发布信息：${params.PUBLISH_PREID},${params.PUBLISH_BUMP},${params.MATERIAL_VERSION},${params.PUBLISH_BRANCH_NAME},${params.BUILD_PATH}"
                echo "其他信息：${params.PUBLISH_PARAMS},${params.CACHE}"
                sh 'git config --global user.email "1857048691@163.com"'
                sh 'git config --global user.name "gwj"'
                script {
                    dir("${MATERIAL_BUILD_DIR}") {
                        if (fileExists("${params.MATERIAL_REPOSITORY_NAME}")) {
                            echo ' git exit'
                            dir("${MATERIAL_BUILD_DIR}/${params.MATERIAL_REPOSITORY_NAME}") {
                                sh "git pull origin ${params.BRANCH_NAME}"
                                sh "git checkout ${params.BRANCH_NAME}"
                            }
                        } else {
                            echo 'git is not exit'
                            sh "git clone  ${params.MATERIAL_REPOSITORY_GIT_PATH} ${params.MATERIAL_REPOSITORY_NAME}"
                        }
                    }
                }
            }
        }
        stage('Pre Env') {
            steps {
                echo "check node_modules,${params.CACHE}"
                sh 'yarn config set registry https://registry.npmjs.org/'
                script {
                    dir("${MATERIAL_BUILD_DIR}/${params.MATERIAL_REPOSITORY_NAME}") {
                        if (!fileExists('node_modules')) {
                            sh 'yarn --force --production --pure-lockfile'
                        } else {
                            if (!params.CACHE) {
                                echo "CACHE --- ${params.CACHE}"
                                sh 'rm -r node_modules'
                                sh 'yarn --force --production --pure-lockfile'
                            }
                        }
                    }
                    dir("${MATERIAL_BUILD_DIR}/${params.MATERIAL_REPOSITORY_NAME}/${params.MATERIAL_PATH}") {
                        if (!fileExists('node_modules')) {
                            sh 'yarn --force --production --pure-lockfile'
                        } else {
                            if (!params.CACHE) {
                                echo "CACHE --- ${params.CACHE}"
                                sh(script: 'rm -rf node_modules')
                                sh 'yarn --force --production --pure-lockfile'
                            }
                        }
                    }
                }
            }
        }
        stage('publish') {
            steps {
                echo "check node_modules"
                script {
                    dir("${MATERIAL_BUILD_DIR}/${params.MATERIAL_REPOSITORY_NAME}/${params.MATERIAL_PATH}") {
                        if(params.PUBLISH_PREID == 'beta'){
                            echo "winex publish --beta  ${params.PUBLISH_BUMP} --skipGitStatusCheck ${params.PUBLISH_PARAMS}"
                            sh "winex publish --beta  ${params.PUBLISH_BUMP} --skipGitStatusCheck ${params.PUBLISH_PARAMS}"
                        }
                        if(params.PUBLISH_ISRELEASE == 'release'){
                            echo 'winex publish --release ${params.PUBLISH_BUMP} --skipGitStatusCheck'
                            sh 'winex publish --release ${params.PUBLISH_BUMP} --skipGitStatusCheck'
                        }
                        sh 'winex doc build'
                        sh 'winex build --app-type materialDemo'
                    }
                }
            }
        }
        stage('deploy') {
            steps {
                sh './jenkins/scripts/test.sh ${MATERIAL_BUILD_DIR}'
            }
        }
    }
}


